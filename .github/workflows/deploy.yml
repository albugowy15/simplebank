name: Deploy

on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Build and run docker image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        name: Checkout

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-1

      - name: Push image
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
      - name: Build, tag, and push docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: simplebank
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG

      - name: Pull and run image
        uses: appleboy/ssh-action@v1.1.0
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: simplebank
          IMAGE_TAG: ${{ github.sha }}
        with:
          host: ${{ secrets.SSH_IP }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          envs: REGISTRY,REPOSITORY,IMAGE_TAG
          script: |
            set -e
            docker stop $REPOSITORY || true
            docker rm $REPOSITORY || true
            docker pull $REGISTRY/$REPOSITORY:$IMAGE_TAG
            docker run --network=host \
              -p 8080:8080 -p 9090:9090 -p 7070:7070 \
              --env-file app.env \
              --name $REPOSITORY \
              --restart unless-stopped \
              -d $REGISTRY/$REPOSITORY:$IMAGE_TAG
            docker system prune -af
